class CustomException:
  ...

class MyException(Exception):
  ...
def foo():
  try:
    ...
  except CustomException: # Noncompliant {{Change this expression to be a class deriving from BaseException or a tuple of such classes.}}
  #      ^^^^^^^^^^^^^^^
    ...
  except (None, BaseException):  # Noncompliant
  #       ^^^^
    ...

  l = [TypeError, ValueError]

  try:
    ...
  except [TypeError, ValueError]:  # Noncompliant
  #      ^^^^^^^^^^^^^^^^^^^^^^^
    ...
  except {TypeError, ValueError}:  # Noncompliant
  #      ^^^^^^^^^^^^^^^^^^^^^^^
    ...
  except l: # Noncompliant
    ...

  try:
     ...
  except MyException:
    ...
  except (MyException):
    ...
  except MyException if True else BaseException:
    ...
  except OSError:
    ...
  except unknown:
    ...
  except ArithmeticError:
    ...
  except:
    ...

  x = 42

  try:
    ...
  except x: # Noncompliant
    ...

  exceptions = (ZeroDivisionError, OverflowError)
  try:
    foo = 1/0
  except exceptions:
    foo = 0


def fp():
  import smtplib
  try:
    ...
  except smtplib.SMTPServerDisconnected:
    ...